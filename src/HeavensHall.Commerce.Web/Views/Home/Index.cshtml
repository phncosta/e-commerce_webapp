@using HeavensHall.Commerce.Domain.Enums;
@using HeavensHall.Commerce.Application.Extensions.EnumExtensions;
@model IEnumerable<HeavensHall.Commerce.Web.Models.ProductModel>

@{
    ViewData["Title"] = "Heaven's Hall Store - Instrumentos Musicais";
}

<div class="container">
    <section id="carousel-banners fadeIn">
        <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
            <ol class="carousel-indicators">
                <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
                <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
            </ol>
            <div class="carousel-inner">
                <div class="carousel-item carousel-produto active">
                    <img class="d-block w-100" src="img/layout/banners/banner_01.jpg" alt="Primeiro banner">
                    <div class="carousel-caption d-none d-md-block">
                        <h5>Bem-vindo à Heaven's Hall</h5>
                        <p>A sua loja de instrumentos preferida</p>
                    </div>
                </div>
                <div class="carousel-item carousel-produto">
                    <img class="d-block w-100" src="img/layout/banners/banner_02.jpg" alt="Segundo banner">
                </div>
                <div class="carousel-item carousel-produto">
                    <img class="d-block w-100" src="img/layout/banners/banner_03.jpg" alt="Terceiro banner">
                </div>
            </div>
            <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </section>

    <div id="secao-produtos" class="pt-3 pb-3">
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <a class="navbar-brand" href="#">Produtos</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse"
                    data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button"
                           data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Categoria
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            @foreach (InstrumentCategory category in Enum.GetValues(typeof(InstrumentCategory)))
                            {
                                <a class="dropdown-item" href="#">@category.GetDescription()</a>
                            }
                        </div>
                    </li>
                </ul>
                <form class="form-inline my-2 my-lg-0">
                    <input class="form-control mr-sm-2" type="search" placeholder="Pesquisar produto"
                           aria-label="Search">
                    <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Ok</button>
                </form>
            </div>
        </nav>

        <div class="card-columns fadeIn">
            @foreach (var product in Model)
            {
                var image = product.Images?.Where(img => img.Main).SingleOrDefault();
                <div class="card">
                    <img class="card-img-top" src="img/guitarra_predator.jpg" alt="Guitarra Predator">
                    <div class="card-body">
                        <h5 class="card-title text-center">@product.Name</h5>
                        <h5 class="text-center">R$ @product.Price</h5>
                        <div class="row">
                            <div class="col-6">
                                <a class="btn btn-outline-primary font-weight-bold w-100" asp-controller="produtos" asp-action="@product.Id"
                                   role="button">
                                    Ver
                                </a>
                            </div>
                            <div class="col-6">
                                <a class="btn btn-primary text-white font-weight-bold w-100" onclick="#"
                                   role="button">
                                    Comprar
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        <div class="d-flex justify-content-center wow fadeIn">
            <ul class="pagination pg-blue">

                <!-- Arrow left -->
                <li class="page-item" id="previous-page">
                    <a class="page-link" onclick="increaseOrDecreasePageBy(-1)">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Previous</span>
                    </a>
                </li>
                <li class="page-item" id="page-selectable-1">
                    <a class="page-link" href="/pagina?num=1">
                        1
                    </a>
                </li>
                <li class="page-item" id="page-selectable-2">
                    <a class="page-link" href="/pagina?num=2">
                        2
                    </a>
                </li>
                <li class="page-item" id="page-selectable-3">
                    <a class="page-link" href="/pagina?num=3">
                        3
                    </a>
                </li>
                <li class="page-item" id="page-selectable-4">
                    <a class="page-link" href="/pagina?num=4">
                        4
                    </a>
                </li>
                <li class="page-item" id="page-selectable-5">
                    <a class="page-link" href="/pagina?num=5">
                        5
                    </a>
                </li>
                <!-- Arrow Right -->
                <li class="page-item" id="next-page">
                    <a class="page-link" onclick="increaseOrDecreasePageBy(1)">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Next</span>
                    </a>
                </li>
            </ul>
        </div>
        <!-- Pagination End -->
    </div>
</div>

<script>
    'use strict';

    document.addEventListener('DOMContentLoaded', function () {
        definePagination();
    });

    const PAGE_COUNT_PARAMETER = "num";
    var currentUrl = window.location.href;
    var url = new URL(currentUrl);
    var pageNumber = parseInt(url.searchParams.get(PAGE_COUNT_PARAMETER) ?? '1');

    const definePagination = () => {
        setCurrentPage(pageNumber);
        setPreviousAndNext(pageNumber);
    }

    const setCurrentPage = currentPageNumber => {
        let selectablePage = document.getElementById(`page-selectable-${currentPageNumber}`);
        selectablePage.classList.add('active');
    }

    const setPreviousAndNext = currentPageNumber => {
        var pagination = document.getElementsByClassName('pagination')[0];
        var nextPage = document.getElementById('next-page');
        var previousPage = document.getElementById('previous-page');

        var lastPage = pagination.children[pagination.children.length - 2];
        var lastPageNumber = lastPage.childNodes[1].innerText;

        currentPageNumber == 1 ? previousPage.classList.add('disabled') : previousPage.classList.remove('disabled');
        currentPageNumber == lastPageNumber ? nextPage.classList.add('disabled') : nextPage.classList.remove('disabled');
    }

    const increaseOrDecreasePageBy = value => {
        if (currentUrl.indexOf(`${PAGE_COUNT_PARAMETER}=`) != -1) {
            window.location.href = currentUrl.replace(`${PAGE_COUNT_PARAMETER}=${pageNumber}`, `${PAGE_COUNT_PARAMETER}=${pageNumber + value}`);
        } else {
            // Case when pagination was not been accessed (User is at default page 1).
            window.location.href = `/pagina?${PAGE_COUNT_PARAMETER}=2`;
        }
    }

</script>
