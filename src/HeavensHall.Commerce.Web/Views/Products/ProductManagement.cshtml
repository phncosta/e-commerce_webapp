@using HeavensHall.Commerce.Domain.Enums;
@using HeavensHall.Commerce.Application.Extensions.EnumExtensions; 
@model IEnumerable<HeavensHall.Commerce.Web.Models.ProductModel>;

@functions {
    private string GetProductStatus(bool statusActive) => statusActive ? Status.Ativar.GetDescription() : Status.Desativar.GetDescription();
}

<div class="container page-container">

    <h4 class="p-2 text-center">Gerenciar produtos</h4>

    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th scope="col">Nome do Produto</th>
                <th scope="col">Qtd. Estoque</th>
                <th scope="col">Editar</th>
                <th scope="col">Status do Produto</th>
                <th scope="col">Inativar/Reativar</th>
                <th scope="col">Visualizar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model)
            {
            <tr>
                <td>
                    @product.Name
                </td>
                <td>
                    @product.Stock.Quantity
                </td>
                <td onclick="editProduct('@product.Id')" class="text-decoration-underline" style="cursor: pointer;">
                    Editar
                </td>
                <td id="@product.Id" style="cursor: pointer;">
                    @GetProductStatus(@product.Is_Active)
                </td>
                <td onclick="changeProductStatus('@product.Id', '@product.Is_Active')" id="status-control" class="text-decoration-underline" style="cursor: pointer;">
                    Alterar status
                </td>
                <td onclick="visualizeProduct('@product.Id')" class="text-decoration-underline text-blue" style="cursor: pointer;">
                    Visualizar produto
                </td>
            </tr>
            }
        </tbody>
    </table>

    <button class="btn float-end btn-outline-dark p-3" onclick="window.location.href='/produtos/cadastrar'">
        Adicionar Produto
    </button>

    <!--Pagination-->
    <nav class="d-flex justify-content-center wow fadeIn">
        <ul class="pagination pg-blue">

            <!--Arrow left-->
            <li class="page-item disabled">
                <a class="page-link" href="#" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>

            <li class="page-item active">
                <a class="page-link" href="#">
                    1
                    <span class="sr-only">(current)</span>
                </a>
            </li>
            <li class="page-item">
                <a class="page-link" href="#">2</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="#">3</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="#">4</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="#">5</a>
            </li>

            <li class="page-item">
                <a class="page-link" href="#" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
        </ul>
    </nav>

</div>

<script>
    const editProduct = id => window.location.href = `/produtos/alterar?id=${id}`;
    const visualizeProduct = id => window.location.href = `/produtos/${id}`;

    const changeProductStatus = (id, currentStatus) => {
        var statusElement = document.getElementById(id);
        var statusControl = document.getElementById('status-control');

        let newStatusIsActive = currentStatus === 'False' || currentStatus === false;

        const REQUEST_URL = `/produtos/status?id=${id}&status=${newStatusIsActive}`;

        fetch(REQUEST_URL,
            {
                method: 'POST'
            })
            .then(function (response) {
                if (response.ok) {
                    statusElement.innerText = newStatusIsActive ? '@Status.Ativar.GetDescription()' : '@Status.Desativar.GetDescription()';

                    // Event Listener Reset/Attach.
                    statusControl.removeAttribute('onclick');
                    statusControl.addEventListener('click', function handler(e) {
                        e.currentTarget.removeEventListener(e.type, handler);
                        changeProductStatus(id, newStatusIsActive);
                    });

                    showBox('success', 'Status alterado.');
                }
            })
            .catch(function (error) {
                showBox('warning', 'Não foi possível atualizar este status.');
            });
    }
</script>